name: Build CSET Installer

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1

      - name: Restore NuGet packages
        run: nuget restore CSETWebApi/CSETWeb_Api/CSETWeb_Api.sln

      - name: Build Angular Frontend
        run: |
          cd CSETWebNg
          npm ci
          npm run build -- --configuration production
          ls -R dist
        shell: cmd

      - name: Publish .NET Backend
        run: |
          msbuild CSETWebApi/CSETWeb_Api/CSETWeb_ApiCore/CSETWebCore.Api.csproj /p:Configuration=Release /p:DeployOnBuild=true /p:PublishProfile=FolderProfile
          ls -R CSETWebApi/CSETWeb_Api/CSETWeb_ApiCore/bin/Release/net8.0

      - name: Download Prerequisites
        run: |
          mkdir installer\downloads
          $urls = @(
            "https://download.microsoft.com/download/3/8/d/38de7036-2433-4207-8eae-06e247e17b25/SqlLocalDB.msi",
            "https://download.visualstudio.microsoft.com/download/pr/122a2c4c-622a-41de-95b0-8183a03b8d2d/e76429775a03a92b8f5560a4c3456f4f/windowsdesktop-runtime-8.0.7-win-x64.exe"
          )
          foreach ($url in $urls) {
            $fileName = $url.Split('/')[-1]
            $outputFile = "installer\downloads\$fileName"
            for ($i = 1; $i -le 3; $i++) {
              try {
                Invoke-WebRequest -Uri $url -OutFile $outputFile
                Write-Host "Successfully downloaded $fileName"
                break
              } catch {
                Write-Host "Attempt $i to download $fileName failed. Retrying..."
                if ($i -eq 3) {
                  Write-Error "Failed to download $fileName after 3 attempts."
                  exit 1
                }
              }
            }
          }
        shell: powershell

      - name: Build MSI Installer
        run: msbuild installer/CsetInstaller.wixproj /p:Configuration=Release /p:OutDir=installer/bin/Release/

      - name: Build Bundle Installer
        run: msbuild installer/CsetBundle.wixproj /p:Configuration=Release /p:OutDir=build_output/

      - name: List build output
        run: ls -R build_output

      - name: Upload installer artifact
        uses: actions/upload-artifact@v4
        with:
          name: CSET-installer
          path: build_output/CSET-Installer-Bundle.exe